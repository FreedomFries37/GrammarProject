#import <standard>

delimiters{
",",
";",
"(",
")",
"{",
"}",
"[",
"]",
"*",
".",
"+",
"-",
"/"
}

token(override) string;
token(override) double{
	"\d+(|.\d*)"
}

cat string_wrap{
	<string>
}

cat double_wrap{
	<double>
}

cat program(default){
	\list(<statement_outer>,"")\
}

cat identifier{
	<string>
}

cat set_value{
	<string_wrap>
	<method>
}

cat method{
	<string_wrap>(\list(<resulting_block>)\)
}

cat variable_declare{
	<identifier><string_wrap>
}

cat statement_outer{
	<statement_inner>;
}

cat statement_inner{
	<variable_declare>
}

cat variable_set{
	<string_wrap>=<resulting_block>
}

cat resulting_block{
	<set_value><resulting_block_tail>
	\{<program>return<set_value>\}
}

cat resulting_block_tail(optional){
	.<resulting_block>
}

cat value_get{

}

